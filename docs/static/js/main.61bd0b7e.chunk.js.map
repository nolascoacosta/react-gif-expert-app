{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevState","type","value","onChange","target","placeholder","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GitExpertApp","categories","cat","index","ReactDOM","render","document","getElementById"],"mappings":"6OAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAchD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAS,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAhBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAgBnBG,YAAY,kB,QCpBPC,G,MAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACtC,OACE,sBAAKC,UAAU,iDAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,S,+BCNEK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,+DAEGG,MAAMR,GAFT,cAEfS,EAFe,gBAIAA,EAAUC,OAJV,uBAIdC,EAJc,EAIdA,KAJc,kBAMdA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EACrB,MAAO,CACLf,GAAKe,EAAIf,GACTC,MAAQc,EAAId,MACZC,IAAG,UAAGa,EAAIC,cAAP,aAAG,EAAYC,iBAAiBf,SAVlB,2CAAH,sDCKPgB,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNM,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRhB,EAAQC,GACLgB,MAAK,SAAAP,GACJK,GAAS,SAAC5B,GACR,MAAO,CACLoB,KAAMG,EACNG,SAAS,WAIjB,CAACZ,IAEIa,EDb0BI,CAAajB,GAAhCS,EAFyB,EAEhCH,KAAeM,EAFiB,EAEjBA,QAEtB,OACE,qCAEE,6BAAMZ,IAGN,sBAAKJ,UAAU,UAAf,UACIgB,GAAW,aACXH,EAAOF,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,cEbrCyB,EAAe,WAAO,IAAD,EAEIxC,mBAClC,CAAC,cAH6B,mBAEzByC,EAFyB,KAEb1C,EAFa,KAUhC,OACE,gCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGE0C,EAAWZ,KAAI,SAACa,EAAIC,GAAL,OACb,cAAC,EAAD,CAEErB,SAAUoB,GADLA,U,MClBjBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61bd0b7e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2 ){\r\n      setCategories( prevState => [ inputValue, ...prevState]);\r\n      setInputValue(\"\");\r\n    }\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n        placeholder=\"Search Gif\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport \"./GifGridItem.css\";\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className=\"gifGridItem animate__animated  animate__wobble\">\r\n      <img src={url} alt={title}/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZkfY26i3QMA7OQe0hShz2C6Mwdmc9X73`;\r\n  const respuesta = await fetch(url);\r\n\r\n  const {data} = await respuesta.json();\r\n\r\n  return data.map(img => {\r\n    return {\r\n      id : img.id,\r\n      title : img.title,\r\n      url : img.images?.downsized_medium.url,\r\n    }\r\n  });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {GifGridItem} from \"./GifGridItem\";\r\nimport \"./GifGrid.css\"\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data : images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n\r\n      <h3>{ category }</h3>\r\n\r\n\r\n      <div className=\"gifGrid\">\r\n        { loading && 'Loading...' }\r\n        { images.map(img => <GifGridItem key={img.id} {...img} />) }\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(images => {\r\n        setState((prevState) => {\r\n          return {\r\n            data: images,\r\n            loading: false\r\n          }\r\n        })\r\n      })\r\n  },[category]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(\r\n    ['One Punch']\r\n  );\r\n\r\n /* const handleAdd = () => {\r\n    //setCategories([ ...categories, 'Hunter' ]);\r\n    setCategories (cats => [...cats, 'Hunter 2']);\r\n  }*/\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr/>\r\n\r\n      {\r\n        categories.map((cat,index) =>\r\n          <GifGrid\r\n            key={cat}\r\n            category={cat}\r\n          />\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from \"./GitExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}